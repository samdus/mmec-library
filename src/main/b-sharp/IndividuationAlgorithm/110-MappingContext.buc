<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.contextFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.symbolic.ctxBase" version="3">
    <org.eventb.core.extendsContext name="'" org.eventb.core.target="040-OntologyContext_Particulars"/>
    <org.eventb.core.carrierSet name="(" org.eventb.core.comment="l'ensemble de toutes les signatures possible dans la source de données" org.eventb.core.identifier="S"/>
    <org.eventb.core.carrierSet name=")" org.eventb.core.comment="l'ensemble des expressions de la source de données" org.eventb.core.identifier="E"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="*" org.eventb.core.comment="toutes expressions permettant de faire l'individuation de la classe" org.eventb.core.identifier="expression_for"/>
    <org.eventb.core.axiom name="cst6" org.eventb.core.comment="S est un ensemble fini" org.eventb.core.label="map_finite_S" org.eventb.core.predicate="finite(S)"/>
    <org.eventb.core.axiom name="cst7" org.eventb.core.comment="E est un ensemble fini" org.eventb.core.label="map_finite_E" org.eventb.core.predicate="finite(E)"/>
    <org.eventb.core.axiom name="+" org.eventb.core.comment="relation entre des classes et des ensembles d'expressions de la source de données qui permettent d'individualiser des particuliers répondant aux axiomes de celles-ci" org.eventb.core.label="map_type_expressionFor" org.eventb.core.predicate="expression_for ∈ C ↔ E"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="," org.eventb.core.comment="les particuliers individualisés par l'expression" org.eventb.core.identifier="individuation"/>
    <org.eventb.core.axiom name="-" org.eventb.core.comment="relation surjective et totale des expressions vers les particuliers dont elles permettent l'individuation" org.eventb.core.label="map_type_individuation" org.eventb.core.predicate="individuation ∈ E  P"/>
    <org.eventb.core.axiom name="/" org.eventb.core.comment="fonction totale des signatures vers les expressions qui les composent" org.eventb.core.label="map_type_signExpression" org.eventb.core.predicate="sign_expression ∈ S → E"/>
    <org.eventb.core.axiom name="cst4" org.eventb.core.comment="relation entre des signatures qui se chevauchent" org.eventb.core.label="map_type_signOverlap" org.eventb.core.predicate="sign_overlap ∈ S ↔ S"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="." org.eventb.core.comment="l'expression d'une signature" org.eventb.core.identifier="sign_expression"/>
    <org.eventb.core.axiom name="axm1" org.eventb.core.comment="relation entre des expressions qui permettent d'individualiser certains particuliers en communs  " org.eventb.core.label="map_type_expSubsets" org.eventb.core.predicate="exp_subsets ∈ E ↔ E"/>
    <org.eventb.core.axiom name="axm2" org.eventb.core.comment="relation entre une expression et une seconde expression qui individualise tous les particuliers individualisés par la première " org.eventb.core.label="map_type_expEquivalent" org.eventb.core.predicate="exp_equivalent ∈ E ↔ E"/>
    <org.eventb.core.axiom name="2" org.eventb.core.comment="il n'existe pas d'expressions qui n'ajoute pas de particuliers par rapport aux autres" org.eventb.core.label="map_expressionFor_axm_onlyMeaningfullExpressions∈&#9;∀c" org.eventb.core.predicate="∀c,e·e ∈ expression_for(c) ⇔ individuation(e) ≠ { i ∣ ∃e' · e' ∈ expression_for(c) ∧ i ∈ individuation(e') }"/>
    <org.eventb.core.axiom name="3" org.eventb.core.comment="corollaire de map_axm_expressionFor_onlyMeaningfullExpressions, qui assure qu'une nouvelle expression individura de nouveaux particuliers pour la classe " org.eventb.core.label="map_expressionFor_thm_expressionMustAddParticulars" org.eventb.core.predicate="∀c,e1,e2 · e1 ∈ expression_for(c) ∧ individuation(e2) ⊆ individuation(e1) ⇒ e2 ∉ expression_for(c) " org.eventb.core.theorem="true"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="cst1" org.eventb.core.comment="les particuliers individualisés par une expression sont aussi individualisés par ces expressions" org.eventb.core.identifier="exp_subsets"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="cst2" org.eventb.core.comment="tous les particuliers individualisés par l'expression sont aussi individualisés par ces expressions" org.eventb.core.identifier="exp_equivalent"/>
    <org.eventb.core.axiom name="axm3" org.eventb.core.comment="une expression est sous-ensemble d'une autre si son l'ensemble de particuliers est un sous-ensemble de l'ensemble de particuliers de l'autre expression " org.eventb.core.label="map_expSubsets_axm_def" org.eventb.core.predicate="∀e1,e2 · e2 ∈ exp_subsets(e1) ⇔ individuation(e1) ⊆ individuation(e2)"/>
    <org.eventb.core.axiom name="axm4" org.eventb.core.comment="deux expressions sont équivalentes si leurs ensembles de particuliers sont sous-ensembles" org.eventb.core.label="map_equivalent_axm_def" org.eventb.core.predicate="∀e1,e2 · e2 ∈ exp_equivalent(e1) ⇔ e1 ∈ exp_subsets(e2) ∧ e2 ∈ exp_subsets(e1)"/>
    <org.eventb.core.axiom name="axm5" org.eventb.core.comment="exp_equivalent est symétrique" org.eventb.core.label="map_equivalent_thm_symmetric" org.eventb.core.predicate="∀e1,e2 · e2 ∈ exp_equivalent(e1) ⇔ e1 ∈ exp_equivalent(e2)" org.eventb.core.theorem="true"/>
    <org.eventb.core.axiom name="axm6" org.eventb.core.comment="exp_equivalent est réflexif" org.eventb.core.label="map_equivalent_thm_reflexive" org.eventb.core.predicate="∀e·e ∈ E ⇒ e ∈ exp_equivalent(e)" org.eventb.core.theorem="true"/>
    <org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" name="cst3" org.eventb.core.comment="certins particuliers individualisés par une signature sont individualisés par d'autres signatures" org.eventb.core.identifier="sign_overlap"/>
    <org.eventb.core.axiom name="cst5" org.eventb.core.comment="deux signatures s'overlap si l'intersection des particuliers qu'ils individualisent n'est pas vide" org.eventb.core.label="map_signOverlap_def" org.eventb.core.predicate="∀s1,s2 · s1 ∈ sign_overlap(s2) ⇔ individuation(sign_expression(s1)) ∩ individuation(sign_expression(s2)) ≠ ∅"/>
</org.eventb.core.contextFile>
