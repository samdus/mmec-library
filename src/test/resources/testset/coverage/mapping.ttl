@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rr:     <http://www.w3.org/ns/r2rml#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix mmec:   <http://www.griis.ca/ns/mmec#> .
@prefix obo:    <http://purl.obolibrary.org/obo/> .
@prefix owl:    <http://www.w3.org/2002/07/owl#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix physio: <http://purl.obolibrary.org/obo/physio.owl#> .
@prefix dc:     <http://purl.org/dc/elements/1.1/> .
@prefix :       <http://www.griis.ca/projects#> .
@base <http://www.griis.ca/projects#> .

obo:humanbodyweight-appli:couverture:v1.0
    a mmec:OntoRel .

<https://griis.ca/JeDIS>
    a mmec:DataSource .

:MappingHeader
    a            mmec:MappingHeader ;
    mmec:ontorel obo:humanbodyweight-appli:couverture:v1.0 ;
    mmec:source  <https://griis.ca/JeDIS> .

# ----------------------------------------------------------------------------------------------------------------------
# Conversions
# ----------------------------------------------------------------------------------------------------------------------
:sqlText
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "text" .

:sqlVarchar
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "varchar" .

:sqlNumeric
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "numeric" .

:bwString
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "\"BW\".\"string_domain\"" .

:bwDecimalDomain
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "\"BW\".\"decimal_domain\"" .

:bwDate
    a                        mmec:SQLType ;
    mmec:qualifiedIdentifier "\"BW\".\"date_domain\"" .

:Conversion:TEXT:string
    a                         mmec:Conversion ;
    mmec:conversionInputType  :sqlText ;
    mmec:conversionOutputType :bwString ;
    mmec:conversionFunction   [ a                        mmec:SQLFunction ;
                                mmec:qualifiedIdentifier "\"MappingSchema\".\"convertTextToBWString\"" ] ;
    mmec:verificationFunction [ a                        mmec:SQLFunction ;
                                mmec:qualifiedIdentifier "\"MappingSchema\".\"v_convertTextToBWString\"" ] .

:Conversion:VARCHAR:string
    a                         mmec:Conversion ;
    mmec:conversionInputType  :sqlVarchar ;
    mmec:conversionOutputType :bwString .

:Conversion:Numeric:decimal
    a                         mmec:Conversion ;
    mmec:conversionInputType  :sqlNumeric ;
    mmec:conversionOutputType :bwDecimalDomain .

:Conversion:Numeric:string
    a                         mmec:Conversion ;
    mmec:conversionInputType  :sqlNumeric ;
    mmec:conversionOutputType :bwString .

# ----------------------------------------------------------------------------------------------------------------------
# Arrimage des différents cas d'exemple
# ----------------------------------------------------------------------------------------------------------------------

# **** Cas de base ****

# -- Classes
# "IAO_0020015"@personal name
:IAO_0020015
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                       "EXP"."PERSONNE"
                      """ ] ; # exp1
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:IAO_0020015 ;
                      mmec:signatureComponent """ "PRENOM" """ ; # k1
                      rr:termType             rr:IRI ] .

# "IAO_0020017"@family name
:IAO_0020017
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                       "EXP"."PERSONNE"
                      """ ] ; # exp2
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:IAO_0020017 ;
                      mmec:signatureComponent """ "NOM" """ ; # k2
                      rr:termType             rr:IRI ] .

# "HBW_0000022"@human name
:HBW_0000022
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                       "EXP"."PERSONNE"
                      """ ] ; # exp3
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000022 ;
                      mmec:signatureComponent """ "PRENOM" """, """ "NOM" """ ; # k3
                      rr:termType             rr:IRI ] .

# -- Propriétés d'objet
# "HBW_0000022"@human name BFO_0000051@'has part' "IAO_0020015"@personal name
:HBW_0000022
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :IAO_0020015 ;
                                           rr:joinCondition    [ rr:child  """ "PRENOM" """ ;
                                                                 rr:parent """ "PRENOM" """ ] ] ] .

# "HBW_0000022"@human name BFO_0000051@'has part' "IAO_0020017"@family name
:HBW_0000022
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :IAO_0020017 ;
                                           rr:joinCondition    [ rr:child  """ "NOM" """ ;
                                                                 rr:parent """ "NOM" """ ] ] ] .
# -- Propriétés de données
# "IAO_0020015"@personal name PHYSIO_0000100@'has value' "PRENOM"
:IAO_0020015
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "PRENOM" """ ;
                                           rr:datatype xsd:string ] ] .

# "IAO_0020017"@family name 'has value' "NOM"
:IAO_0020017
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "NOM" """ ;
                                           rr:datatype xsd:string ] ] .

# **** Héritage de base ****
# Aucune définition supplémentaire requise, puisque l'héritage simple est généré automatiquement.

# **** Héritage multiple ****

# "HBW_0000009"@body weight
# Rédéfini pour le cas Individuation d'une conjonction de disjonction
#:HBW_0000009
#    a               rr:TriplesMap ;
#    rr:logicalTable [ rr:sqlQuery """
#                        select "ID_PATIENT_EXT"
#                        from "EXP"."PATIENT"
#                        where "POIDS" IS NOT NULL
#                      """
#                    ] ; # exp1
#    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
#                      rr:class                obo:HBW_0000009 ;
#                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k1
#                      rr:termType             rr:IRI ] .

# **** Héritage par disjonction ****

# "HBW_0000011"@patient role
:HBW_0000011
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                       "EXP"."PATIENT"
                      """ ] ; # exp1
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000011 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k1
                      rr:termType             rr:IRI ] .

# "HBW_0000010"@health care provider role
:HBW_0000010
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                       "EXP"."MEDECIN"
                      """ ] ; # exp2
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000010 ;
                      mmec:signatureComponent """ "ID_MEDECIN_EXT" """ ; # k2
                      rr:termType             rr:IRI ] .

# **** Héritage avec chevauchement ****

# Version de base (en commentaire, puisqu'une seule des deux versions doit être utilisée pour les tests)

#:e1 a mmec:SignatureSuperset .
#
## HBW_0000007@Patient et NCBITaxon_9606@Homo sapiens
#:HBW_0000007
#    a               rr:TriplesMap ;
#    rr:logicalTable [ a            rr:R2RMLView ;
#                      rr:tableName """ "EXP"."PATIENT" """ ] ; # e2
#    rr:subjectMap   [ a                       rr:SubjectMap ;
#                      rr:class                obo:HBW_0000007, :NCBITaxon_9606 ;
#                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k2
#                      rr:termType             rr:IRI ] ;
#   mmec:subsets :e1 .
#
## HBW_0000008@health care provider
#:HBW_0000008
#    a               rr:TriplesMap ;
#    rr:logicalTable [ a            rr:R2RMLView ;
#                      rr:tableName """ "EXP"."MEDECIN" """ ] ; # e3
#    rr:subjectMap   [ a                       rr:SubjectMap ;
#                      rr:class                obo:HBW_0000008 ;
#                      mmec:signatureComponent """ "ID_MEDECIN_EXT" """ ; # k3
#                      rr:termType             rr:IRI ] ;
#    mmec:subsets :e1 .

# Version où on optimise en utilisant une expression sur la table personne (e1) pour ne pas avoir à faire l'union des
# expressions sur patient (e2) et medecin (e3) :

# NCBITaxon_9606@Homo sapiens
:NCBITaxon_9606
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                        "EXP"."PERSONNE"
                      """ ] ; # e1
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:NCBITaxon_9606 ;
                      mmec:signatureComponent """ "ID_PERSONNE_EXT" """ ;   # k1
                      rr:termType             rr:IRI ] .

# HBW_0000007@Patient
:HBW_0000007
    a               rr:TriplesMap ;
    rr:logicalTable [ a            rr:R2RMLView ;
                      rr:tableName """ "EXP"."PATIENT" """ ] ; # e2
    rr:subjectMap   [ a                       rr:SubjectMap ;
                      rr:class                obo:HBW_0000007 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k2
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :NCBITaxon_9606 .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :HBW_0000007 ;
   owl:annotatedProperty  mmec:subsets ;
   owl:annotatedTarget :NCBITaxon_9606 ;
   dc:description [
        rdfs:comment """ Tous les patients représentés dans la table PATIENT sont des humains.
                         Par ailleurs, l'identifiant de patient correspond à un identifiant de personne. Donc, la
                         signature :HBW_0000007 est un sous-ensemble de la signature :NCBITaxon_9606.
                     """ ;
   ]
 ] .

# HBW_0000008@health care provider
:HBW_0000008
    a               rr:TriplesMap ;
    rr:logicalTable [ a            rr:R2RMLView ;
                      rr:tableName """ "EXP"."MEDECIN" """ ] ; # e3
    rr:subjectMap   [ a                       rr:SubjectMap ;
                      rr:class                obo:HBW_0000008 ;
                      mmec:signatureComponent """ "ID_MEDECIN_EXT" """ ; # k3
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :NCBITaxon_9606 .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :HBW_0000008 ;
   owl:annotatedProperty  mmec:subsets ;
   owl:annotatedTarget :NCBITaxon_9606 ;
   dc:description [
        rdfs:comment """L'identifiant de medecin correspond à un identifiant de personne. Donc, la signature
                        :HBW_0000008 est un sous-ensemble de la signature :NCBITaxon_9606.
                     """ ;
   ]
 ] .

# **** Classe à signatures multiples ****

# "HBW_0000002@RAMQ vulnerability code

:e4
    a mmec:SignatureSuperset .

:HBW_0000002_e1
    a               rr:TriplesMap ;
    rr:logicalTable [ a            rr:R2RMLView ;
                      rr:sqlQuery """
                       select "CODE_VULN_1"
                       from "EXP"."PATIENT"
                       where "CODE_VULN_1" <> 0
                      """ ] ; # e1
    rr:subjectMap   [ a                       rr:SubjectMap ;
                      rr:class                obo:HBW_0000002 ;
                      mmec:signatureComponent """ "CODE_VULN_1" """ ; # k1
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :e4 .

:HBW_0000002_e2
    a               rr:TriplesMap ;
    rr:logicalTable [ a            rr:R2RMLView ;
                      rr:sqlQuery """
                       select "CODE_VULN_2"
                       from "EXP"."PATIENT"
                       where "CODE_VULN_2" <> 0
                      """ ] ; # e2
    rr:subjectMap   [ a                       rr:SubjectMap ;
                      rr:class                obo:HBW_0000002 ;
                      mmec:signatureComponent """ "CODE_VULN_2" """ ; # k2
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :e4 .

:HBW_0000002_e3
    a               rr:TriplesMap ;
    rr:logicalTable [ a            rr:R2RMLView ;
                      rr:sqlQuery """
                       select "CODE_VULN_3"
                       from "EXP"."PATIENT"
                       where "CODE_VULN_3" <> 0
                      """ ] ; # e3
    rr:subjectMap   [ a                       rr:SubjectMap ;
                      rr:class                obo:HBW_0000002 ;
                      mmec:signatureComponent """ "CODE_VULN_3" """ ; # k3
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :e4 .

# "HBW_0000002@RAMQ vulnerability code code PHYSIO_0000100@'has value' String
:HBW_0000002_e1
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "CODE_VULN_1" """ ;
                                           rr:datatype xsd:string ] ] .

:HBW_0000002_e2
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "CODE_VULN_2" """ ;
                                           rr:datatype xsd:string ] ] .

:HBW_0000002_e3
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "CODE_VULN_3" """ ;
                                           rr:datatype xsd:string ] ] .

# **** Individuation d'une conjonction ****
# Classes

# HBW_0000007@Patient
# Lorsque la personne responsable de l'arrimage traite un nouvel axiome de l'OntoRel, il est possible qu'elle réalise
# que certains particuliers n'avaient pas été pris en compte lors de l'arrimage d'une classe.
# Cet élément est simulé ici, puisqu'il est possible que le cas des patients non identifiés n'aie pas été pris en
# compte dans la documentation de la source de données. Il est donc nécessaire de compléter la définition de la classe
# HBW_0000007@Patient pour inclure les patients non identifiés.

# HBW_0000007@Patient (not yet identified)
<HBW_0000007_noidyet:subject>
    a                       rr:SubjectMap, rr:TermMap ;
    rr:class                obo:HBW_0000007 ;
    rr:class                obo:NCBITaxon_9606 ;
    mmec:signatureComponent """ "ID_PATIENT_UUID" """ ;
    rr:termType             rr:IRI .

[ rdf:type owl:Axiom ;
   owl:annotatedSource <HBW_0000007_noidyet:subject> ;
   owl:annotatedProperty rr:class ;
   owl:annotatedTarget obo:HBW_0000007 ;
   dc:description [
        rdfs:comment "Certains patients ne sont pas encore identifiés (DOSSIER.ID_PATIENT is null)." ;
   ]
 ] .

[ rdf:type owl:Axiom ;
   owl:annotatedSource <HBW_0000007_noidyet:subject> ;
   owl:annotatedProperty rr:class ;
   owl:annotatedTarget obo:NCBITaxon_9606 ;
   dc:description [
        rdfs:comment "Tous les patients représentés dans la table DOSSIER sont des humains." ;
   ]
 ] .

# Note: il ne s'agit pas d'un subset de :NCBITaxon_9606, puisqu'il n'y a aucune façon de réassocier les particuliers
:HBW_0000007_not_identified
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                       select "ID_PATIENT_UUID"
                       from "EXP"."DOSSIER"
                       where "ID_PATIENT_EXT" is null
                      """ ] ;
    rr:subjectMap   <HBW_0000007_noidyet:subject> .

# HBW_0000006@medical record identifier
:HBW_0000006
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                        "EXP"."DOSSIER"
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000006 ;
                      mmec:signatureComponent """ "ID_PATIENT_UUID" """ ;
                      rr:termType             rr:IRI ] .

# ONTORELA_C4d0c3f45@(health care record and (is about exactly 1 patient))
:ONTORELA_C4d0c3f45
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:tableName """
                        "EXP"."DOSSIER"
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                physio:ONTORELA_C4d0c3f45 ;
                      mmec:signatureComponent """ "ID_PATIENT_UUID" """ ;
                      rr:termType             rr:IRI ] .

# Propriétés d'objet
# HBW_0000006@medical record identifier IAO_0000219@'denotes' ONTORELA_C4d0c3f45@(health care record and (is about exactly 1 patient))
:HBW_0000006
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000219 ;
                            rr:objectMap [ rr:parentTriplesMap :ONTORELA_C4d0c3f45 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_UUID" """ ;
                                                                 rr:parent """ "ID_PATIENT_UUID" """ ] ] ] .

# ONTORELA_C4d0c3f45@(health care record and (is about exactly 1 patient)) IAO_0000136@'is about' HBW_0000007@Patient
:ONTORELA_C4d0c3f45
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000136 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000007 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PATIENT_EXT" """ ] ] ] .

:ONTORELA_C4d0c3f45
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000136 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000007_not_identified ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_UUID" """ ;
                                                                 rr:parent """ "ID_PATIENT_UUID" """ ] ] ] .

# Propriété de données
# HBW_0000006@Medical record identifier PHYSIO_0000100@'has value' xsd:string
:HBW_0000006
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   """ "ID_PATIENT_UUID" """ ;
                                           rr:datatype xsd:string ] ] .

# **** Individuation d'une disjonction ****

# VO_0004896@intersex datum
:VO_0004896
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE_BIO"
                        from "EXP"."PATIENT"
                        where "SEXE_BIO" = 'I'
                      """ ] ; # e1
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:VO_0004896, obo:HBW_0000024 ;
                      mmec:signatureComponent """ "SEXE_BIO" """ ; # k1
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :VO_0001194 .

# VO_0004895@female datum
:VO_0004895
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE_BIO"
                        from "EXP"."PATIENT"
                        where "SEXE_BIO" = 'F'
                      """ ] ; # e2
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:VO_0004895, obo:HBW_0000025 ;
                      mmec:signatureComponent """ "SEXE_BIO" """ ; # k1
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :VO_0001194 .

# VO_0000613@male datum
:VO_0000613
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE_BIO"
                        from "EXP"."PATIENT"
                        where "SEXE_BIO" = 'M'
                      """ ] ; # e3
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:VO_0000613, obo:HBW_0000023 ;
                      mmec:signatureComponent """ "SEXE_BIO" """ ; # k1
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :VO_0001194 .

# VO_0001194@biological sex datum
:VO_0001194
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE_BIO"
                        from "EXP"."PATIENT"
                        where "SEXE_BIO" is not null
                      """ ] ; # e4
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:VO_0001194 ;
                      mmec:signatureComponent """ "SEXE_BIO" """ ; # k1
                      rr:termType             rr:IRI ] .

# OMRSE_00000210@female gender identity ICE
:OMRSE_00000210
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "IDENTITE_GENRE"
                        from "EXP"."PATIENT"
                        where "IDENTITE_GENRE" = 'F'
                      """ ] ; # e5
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:OMRSE_00000210, obo:HBW_0000025 ;
                      mmec:signatureComponent """ "IDENTITE_GENRE" """ ; # k2
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :OMRSE_00000209 .

# OMRSE_00000211@male gender identity ICE
:OMRSE_00000211
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "IDENTITE_GENRE"
                        from "EXP"."PATIENT"
                        where "IDENTITE_GENRE" = 'M'
                      """ ] ; # e6
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:OMRSE_00000211, obo:HBW_0000023 ;
                      mmec:signatureComponent """ "IDENTITE_GENRE" """ ; # k2
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :OMRSE_00000209 .

# OMRSE_00000212@non-binary identity ICE
:OMRSE_00000212
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "IDENTITE_GENRE"
                        from "EXP"."PATIENT"
                        where "IDENTITE_GENRE" = 'NB'
                      """ ] ; # e7
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:OMRSE_00000212, obo:HBW_0000024 ;
                      mmec:signatureComponent """ "IDENTITE_GENRE" """ ; # k2
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :OMRSE_00000209 .

# OMRSE_00000209@gender identity ICE
:OMRSE_00000209
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "IDENTITE_GENRE"
                        from "EXP"."PATIENT"
                        where "IDENTITE_GENRE" is not null
                      """ ] ; # e8
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:OMRSE_00000209 ;
                      mmec:signatureComponent """ "IDENTITE_GENRE" """ ; # k2
                      rr:termType             rr:IRI ] .

# HBW_0000025@female datum or gender ICE
:HBW_0000025
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE"
                        from "EXP"."PATIENT"
                        where "SEXE" = 'F'
                      """ ] ; # e9
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000025 ;
                      mmec:signatureComponent """ "SEXE" """ ; # k3
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :IOIO_0000012 .

# HBW_0000023@male datum or gender ICE
:HBW_0000023
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE"
                        from "EXP"."PATIENT"
                        where "SEXE" = 'M'
                      """ ] ; # e10
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000023 ;
                      mmec:signatureComponent """ "SEXE" """ ; # k3
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :IOIO_0000012 .

# IOIO_0000012@human biological sex or gender identity ICE
:IOIO_0000012
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "SEXE"
                        from "EXP"."PATIENT"
                        where "SEXE" is not null
                      """ ] ; # e11
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:IOIO_0000012 ;
                      mmec:signatureComponent """ "SEXE" """ ; # k3
                      rr:termType             rr:IRI ] .

# **** Individuation d'une conjonction de disjonction ****

# OBI_0100026@organism
# Déjà traité via l'arrimage de la classe NCBITaxon_9606@Homo sapiens :
#:NCBITaxon_9606
#    a               rr:TriplesMap ;
#    rr:logicalTable [ rr:tableName """
#                        "EXP"."PERSONNE"
#                      """ ] ; # e1
#    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
#                      rr:class                obo:NCBITaxon_9606 ;
#                      mmec:signatureComponent """ "ID_PERSONNE_EXT" """ ;   # k1
#                      rr:termType             rr:IRI ] .

# HBW_0000009@body weight
# ONTORELA_C2986e108@(quality ∨ disposition) ⋀ (‘inheres in’ organism)
:HBW_0000009
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                        where "POIDS" is not null
                      """ ] ; # e2
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000009, physio:ONTORELA_C2986e108 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k2
                      rr:termType             rr:IRI ] .

# ONTORELA_C61c354fb@‘data item’ ⋀ ‘is about’ ((quality ∨ disposition) ⋀ (‘inheres in’ organism))
# Sera initialement défini comme suit :
#:ONTORELA_C61c354fb
#    a               rr:TriplesMap ;
#    rr:logicalTable [ rr:sqlQuery """
#                        select "ID_PATIENT_EXT"
#                        from "EXP"."PATIENT"
#                        where "POIDS" is not null
#                       """ ] ; # e3
#    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
#                      rr:class                physio:ONTORELA_C61c354fb ;
#                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k3
#                      rr:termType             rr:IRI ] .
# Mais sera réutilisé pour la classe HBW_0000026@weight measurement datum

# HBW_0000012@physiological evaluation
:HBW_0000012_poids
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                        where "POIDS" is not null
                      """ ] ; # e4
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000012 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ; # k4
                      rr:termType             rr:IRI ] .

# "HBW_0000012"@physiological evaluation "OBI_0000299"@has_specified_output ONTORELA_C61c354fb
:HBW_0000012_poids
    rr:predicateObjectMap [ rr:predicate obo:OBI_0000299 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000026 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PATIENT_EXT" """ ] ] ] .

# "ONTORELA_C61c354fb" "IAO_0000136"@is about "ONTORELA_C2986e108"
:HBW_0000026
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000136 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000009 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PATIENT_EXT" """ ] ] ] .

# "HBW_0000009" "RO_0000052@inheres in" "OBI_0100026"@organism
:HBW_0000009
    rr:predicateObjectMap [ rr:predicate obo:RO_0000052 ;
                            rr:objectMap [ rr:parentTriplesMap :NCBITaxon_9606 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PERSONNE_EXT" """ ] ] ] .

# **** Arrimage d'une propriété définie sur un parent ****
# "IAO_0000003"@measurement unit label
:IAO_0000003
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "ID_PATIENT_EXT",
                               'cm' as "label"
                        from "EXP"."PATIENT"
                        where "TAILLE" is not null
                        """ ] ;
    rr:subjectMap   [ a           rr:SubjectMap, rr:TermMap ;
                      rr:class    obo:IAO_0000003 ;
                      rr:template "http://purl.obolibrary.org/obo/IAO_0000003/{\"label\"}" ;
                      rr:termType rr:IRI ] .

# "HBW_0000003"@weight unit
:HBW_0000003
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select "ID_PATIENT_EXT",
                                'kg' as "label"
                        from "EXP"."PATIENT"
                        where "POIDS" is not null
                        """ ] ;
    rr:subjectMap   [ a           rr:SubjectMap, rr:TermMap ;
                      rr:class    obo:HBW_0000003 ;
                      rr:template "http://purl.obolibrary.org/obo/HBW_0000003/{\"label\"}" ;
                      rr:termType rr:IRI ] .

# "IAO_0000003"@measurement unit label [1..1] "PHYSIO_0000100@has value" "string"
:IAO_0000003
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   "label" ;
                                           rr:datatype xsd:string ] ] .

# "HBW_0000003"@weight unit [1..1] "PHYSIO_0000100@has value" "string"
:HBW_0000003
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000100 ;
                            rr:objectMap [ rr:column   "label" ;
                                           rr:datatype xsd:string ] ] .


# **** Arrimage lors d’un sous-typage de propriété d’objet ****

# "IAO_0000032"@scalar measurement datum
:IAO_0000032
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select *
                        from "EXP"."PATIENT"
                        where "TAILLE" is not null
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:IAO_0000032 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] .

# "HBW_0000026"@weight measurement datum
:HBW_0000026
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select *
                        from "EXP"."PATIENT"
                        where "POIDS" is not null
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000026, physio:ONTORELA_C61c354fb ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] .

# 'scalar measurement datum' 'has measurement unit label' 'measurement unit label'
:IAO_0000032
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000039 ;
                            rr:objectMap [ rr:parentTriplesMap :IAO_0000003 ;
                                           rr:joinCondition    [ rr:child  "\"ID_PATIENT_EXT\"" ;
                                                                 rr:parent "\"ID_PATIENT_EXT\"" ] ] ] .

# 'scalar measurement datum' 'has measurement unit label' 'weight unit'
:HBW_0000026
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000039 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000003 ;
                                           rr:joinCondition    [ rr:child  "\"ID_PATIENT_EXT\"" ;
                                                                 rr:parent "\"ID_PATIENT_EXT\"" ] ] ] .
# 'scalar measurement datum' 'has measurement value' decimal (taille)
:IAO_0000032
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000004 ;
                            rr:objectMap [ rr:column   "\"TAILLE\"" ;
                                           rr:datatype xsd:decimal ] ] .

# 'scalar measurement datum' 'has measurement value' decimal (poids)
:HBW_0000026
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000004 ;
                            rr:objectMap [ rr:column  "\"POIDS\"" ;
                                           rr:datatype xsd:decimal ] ] .

# **** Inférence d'arrimage ****
# "HBW_0000014"@obesity
# ONTORELA_C2986e108@(quality ∨ disposition) ⋀ (‘inheres in’ organism)
:HBW_0000014
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                        where ("POIDS" / ("TAILLE" / 100 * "TAILLE" / 100)) >= 30
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000014, physio:ONTORELA_C2986e108 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] .

# ONTORELA_C2986e108 [1..*] "RO_0000052"@inheres in "OBI_0100026"@organism
:HBW_0000014
    rr:predicateObjectMap [ rr:predicate obo:RO_0000052 ;
                   rr:objectMap        [ rr:parentTriplesMap :HBW_0000007 ;
                                         rr:joinCondition    [ rr:child  "\"ID_PATIENT_EXT\"" ;
                                                               rr:parent "\"ID_PATIENT_EXT\"" ] ] ] .

# **** Propriété définie à l'aide d'une jointure ****

#"HBW_0000013"@physiological evaluation from health care provider
:HBW_0000013_poids
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                        where "POIDS" is not null
                        and exists (
                           select 1
                           from "EXP"."MEDECIN_TRAITANT"
                           where "MEDECIN_TRAITANT"."ID_PATIENT_EXT" = "PATIENT"."ID_PATIENT_EXT"
                       )
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000013 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :HBW_0000012_poids .

# HBW_0000008@health care provider a déjà été arrimé pour la figure "Héritage avec chevauchement"

# "HBW_0000013"@physiological evaluation from health care provider "PHYSIO_0000089@has evaluant" "HBW_0000008"@health care provider
:HBW_0000013_poids_medecin
    a                     rr:TriplesMap ;
    rr:logicalTable       [ rr:tableName """
                                "EXP" ."MEDECIN_TRAITANT"
                            """ ] ;
    mmec:refSubjectMap    [ rr:parentTriplesMap :HBW_0000013_poids ;
                            rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                  rr:parent """ "ID_PATIENT_EXT" """ ] ] ;
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000089 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000008 ;
                                           rr:joinCondition    [ rr:child  """ "ID_MEDECIN_EXT" """ ;
                                                                 rr:parent """ "ID_MEDECIN_EXT" """ ] ] ] .

# **** Arrimages non illustré dans les figures ****
:HBW_0000012_taille
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000012 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] .

:HBW_0000013_taille
    a               rr:TriplesMap ;
    rr:logicalTable [ a           rr:R2RMLView ;
                      rr:sqlQuery """
                        select "ID_PATIENT_EXT"
                        from "EXP"."PATIENT"
                        where "TAILLE" is not null
                          and exists
(
                           select 1
                           from "EXP"."MEDECIN_TRAITANT"
                           where "MEDECIN_TRAITANT"."ID_PATIENT_EXT" = "PATIENT"."ID_PATIENT_EXT"
                       )
        """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000013 ;
                      mmec:signatureComponent """ "ID_PATIENT_EXT" """ ;
                      rr:termType             rr:IRI ] ;
    mmec:subsets    :HBW_0000012_taille .

# "HBW_0000012"@physiological evaluation "OBI_0000299"@has_specified_output ONTORELA_C61c354fb
:HBW_0000012_taille
    rr:predicateObjectMap [ rr:predicate obo:OBI_0000299 ;
                            rr:objectMap [ rr:parentTriplesMap :IAO_0000032 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PATIENT_EXT" """ ] ] ] .

# "HBW_0000013"@physiological evaluation from health care provider "PHYSIO_0000089@has evaluant" "HBW_0000008"@health care provider
:HBW_0000013_taille_medecin
    a                     rr:TriplesMap ;
    rr:logicalTable       [ rr:tableName """
                                "EXP" ."MEDECIN_TRAITANT"
        """ ] ;
    mmec:refSubjectMap    [ rr:parentTriplesMap :HBW_0000013_taille ;
                            rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                  rr:parent """ "ID_PATIENT_EXT" """ ] ] ;
    rr:predicateObjectMap [ rr:predicate obo:PHYSIO_0000089 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000008 ;
                                           rr:joinCondition    [ rr:child  """ "ID_MEDECIN_EXT" """ ;
                                                                 rr:parent """ "ID_MEDECIN_EXT" """ ] ] ] .


# "HBW_0000008"@health care provider "RO_0000087"@has role "HBW_0000010"@health care provider role
:HBW_0000008
    rr:predicateObjectMap [ rr:predicate obo:RO_0000087 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000010 ;
                                           rr:joinCondition    [ rr:child  """ "ID_MEDECIN_EXT" """ ;
                                                                 rr:parent """ "ID_MEDECIN_EXT" """ ] ] ] .

# "HBW_0000007"@patient "RO_0000087"@has role "HBW_0000011"@patient role
:HBW_0000007
    rr:predicateObjectMap [ rr:predicate obo:RO_0000087 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000011 ;
                                           rr:joinCondition    [ rr:child  """ "ID_PATIENT_EXT" """ ;
                                                                 rr:parent """ "ID_PATIENT_EXT" """ ] ] ] .

# "HBW_0000028"@human biological sex or gender identity statement
:HBW_0000028
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select *
                        from "EXP"."PATIENT"
                        where "SEXE_BIO" is not null
                          or "IDENTITE_GENRE" is not null
                          or "SEXE" is not null
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000028 ;
                      mmec:signatureComponent "\"ID_PATIENT_EXT\"" ;
                      rr:termType             rr:IRI ] .

# "HBW_0000028"@human biological sex or gender identity statement "BFO_0000051"@has part
#        "IOIO_0000012"@human biological sex or gender identity ICE
:HBW_0000028
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :IOIO_0000012 ;
                                           rr:joinCondition    [ rr:child  "\"SEXE\"" ;
                                                                 rr:parent "\"SEXE\"" ] ] ] .

# "HBW_0000028"@human biological sex or gender identity statement "BFO_0000051"@has part
#        "VO_0001194"@biological sex datum
:HBW_0000028
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :VO_0001194 ;
                                           rr:joinCondition    [ rr:child  "\"SEXE_BIO\"" ;
                                                                 rr:parent "\"SEXE_BIO\"" ] ] ] .

# "HBW_0000028"@human biological sex or gender identity statement "BFO_0000051"@has part
#        "OMRSE_00000209"@gender identity ICE
:HBW_0000028
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :OMRSE_00000209 ;
                                           rr:joinCondition    [ rr:child  "\"IDENTITE_GENRE\"" ;
                                                                 rr:parent "\"IDENTITE_GENRE\"" ] ] ] .

# "HBW_0000028"@human biological sex or gender identity statement "BFO_0000051"@has part
#        "HBW_0000006"@medical record identifier
:HBW_0000028
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000006 ;
                                           rr:joinCondition    [ rr:child  "\"ID_PATIENT_EXT\"" ;
                                                                 rr:parent "\"ID_PATIENT_EXT\"" ] ] ] .

# "HBW_0000029"@RAMQ vulnerability code statement
:HBW_0000029
    a               rr:TriplesMap ;
    rr:logicalTable [ rr:sqlQuery """
                        select *
                        from "EXP"."PATIENT"
                        where "CODE_VULN_1" is not null
                          or "CODE_VULN_2" is not null
                          or "CODE_VULN_3" is not null
                      """ ] ;
    rr:subjectMap   [ a                       rr:SubjectMap, rr:TermMap ;
                      rr:class                obo:HBW_0000029 ;
                      mmec:signatureComponent "\"ID_PATIENT_EXT\"" ;
                      rr:termType             rr:IRI ] .

# "HBW_0000029"@RAMQ vulnerability code statement "BFO_0000051"@has part
#        "HBW_0000002"@RAMQ vulnerability code e1
:HBW_0000029
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000002_e1 ;
                                           rr:joinCondition    [ rr:child  "\"CODE_VULN_1\"" ;
                                                                 rr:parent "\"CODE_VULN_1\"" ] ] ] .

# "HBW_0000029"@RAMQ vulnerability code statement "BFO_0000051"@has part
#        "HBW_0000002"@RAMQ vulnerability code e2
:HBW_0000029
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000002_e2 ;
                                           rr:joinCondition    [ rr:child  "\"CODE_VULN_2\"" ;
                                                                 rr:parent "\"CODE_VULN_2\"" ] ] ] .

# "HBW_0000029"@RAMQ vulnerability code statement "BFO_0000051"@has part
#        "HBW_0000002"@RAMQ vulnerability code e3
:HBW_0000029
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000002_e3 ;
                                           rr:joinCondition    [ rr:child  "\"CODE_VULN_3\"" ;
                                                                 rr:parent "\"CODE_VULN_3\"" ] ] ] .

# "HBW_0000029"@RAMQ vulnerability code statement "BFO_0000051"@has part
#        "HBW_0000006"@medical record identifier
:HBW_0000029
    rr:predicateObjectMap [ rr:predicate obo:BFO_0000051 ;
                            rr:objectMap [ rr:parentTriplesMap :HBW_0000006 ;
                                           rr:joinCondition    [ rr:child  "\"ID_PATIENT_EXT\"" ;
                                                                 rr:parent "\"ID_PATIENT_EXT\"" ] ] ] .

# "HBW_0000022"@human name "IAO_0000219"@denotes "NCBITaxon_9606"@Homo sapiens
:HBW_0000022
    rr:predicateObjectMap [ rr:predicate obo:IAO_0000219 ;
                            rr:objectMap [ rr:parentTriplesMap :NCBITaxon_9606 ;
                                           rr:joinCondition    [ rr:child  "\"ID_PERSONNE_EXT\"" ;
                                                                 rr:parent "\"ID_PERSONNE_EXT\"" ] ] ] .
